// <auto-generated />
using System;
using App.MoreJee.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace App.MoreJee.API.Migrations
{
    [DbContext(typeof(MoreJeeAppContext))]
    partial class MoreJeeAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("morejeeapp")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.CategoryAggregate.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int>("DisplayIndex")
                        .HasColumnName("display_index");

                    b.Property<string>("Fingerprint")
                        .HasColumnName("fingerprint");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<int>("LValue")
                        .HasColumnName("lvalue");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("NodeType")
                        .HasColumnName("node_type");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.Property<string>("ParentId")
                        .HasColumnName("parent_id");

                    b.Property<int>("RValue")
                        .HasColumnName("rvalue");

                    b.Property<string>("Resource")
                        .HasColumnName("resource");

                    b.HasKey("Id")
                        .HasName("pk_category");

                    b.ToTable("category");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ClientAssetAggregate.Map", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<long>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.HasKey("Id")
                        .HasName("pk_map");

                    b.ToTable("map");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ClientAssetAggregate.Material", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("CategoryId")
                        .HasColumnName("category_id");

                    b.Property<long>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<long>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.HasKey("Id")
                        .HasName("pk_material");

                    b.ToTable("material");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ClientAssetAggregate.PackageMap", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AndroidCookedAssetUrl")
                        .HasColumnName("android_cooked_asset_url");

                    b.Property<string>("Dependencies")
                        .HasColumnName("dependencies");

                    b.Property<string>("DependencyAssetUrlsOfAndroidCooked")
                        .HasColumnName("dependency_asset_urls_of_android_cooked");

                    b.Property<string>("DependencyAssetUrlsOfIOSCooked")
                        .HasColumnName("dependency_asset_urls_of_ioscooked");

                    b.Property<string>("DependencyAssetUrlsOfSource")
                        .HasColumnName("dependency_asset_urls_of_source");

                    b.Property<string>("DependencyAssetUrlsOfUnCooked")
                        .HasColumnName("dependency_asset_urls_of_un_cooked");

                    b.Property<string>("DependencyAssetUrlsOfWin64Cooked")
                        .HasColumnName("dependency_asset_urls_of_win64_cooked");

                    b.Property<string>("IOSCookedAssetUrl")
                        .HasColumnName("ioscooked_asset_url");

                    b.Property<string>("Package")
                        .HasColumnName("package");

                    b.Property<string>("Property")
                        .HasColumnName("property");

                    b.Property<string>("ResourceId")
                        .HasColumnName("resource_id");

                    b.Property<string>("ResourceType")
                        .HasColumnName("resource_type");

                    b.Property<string>("SourceAssetUrl")
                        .HasColumnName("source_asset_url");

                    b.Property<string>("UnCookedAssetUrl")
                        .HasColumnName("un_cooked_asset_url");

                    b.Property<string>("Win64CookedAssetUrl")
                        .HasColumnName("win64_cooked_asset_url");

                    b.HasKey("Id")
                        .HasName("pk_package_map");

                    b.ToTable("package_map");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ClientAssetAggregate.StaticMesh", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<long>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.Property<string>("RelatedProductSpecIds")
                        .HasColumnName("related_product_spec_ids");

                    b.HasKey("Id")
                        .HasName("pk_static_mesh");

                    b.ToTable("static_mesh");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ClientAssetAggregate.Texture", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<long>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.HasKey("Id")
                        .HasName("pk_texture");

                    b.ToTable("texture");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.DesignAggregate.Solution", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<long>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.HasKey("Id")
                        .HasName("pk_solution");

                    b.ToTable("solution");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Brand")
                        .HasColumnName("brand");

                    b.Property<string>("CategoryId")
                        .HasColumnName("category_id");

                    b.Property<long>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("DefaultProductSpecId")
                        .HasColumnName("default_product_spec_id");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<decimal>("MaxPartnerPrice")
                        .HasColumnName("max_partner_price");

                    b.Property<decimal>("MaxPrice")
                        .HasColumnName("max_price");

                    b.Property<decimal>("MaxPurchasePrice")
                        .HasColumnName("max_purchase_price");

                    b.Property<decimal>("MinPartnerPrice")
                        .HasColumnName("min_partner_price");

                    b.Property<decimal>("MinPrice")
                        .HasColumnName("min_price");

                    b.Property<decimal>("MinPurchasePrice")
                        .HasColumnName("min_purchase_price");

                    b.Property<long>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.Property<string>("Unit")
                        .HasColumnName("unit");

                    b.HasKey("Id")
                        .HasName("pk_product");

                    b.ToTable("product");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductPermissionGroup", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.HasKey("Id")
                        .HasName("pk_product_permission_group");

                    b.ToTable("product_permission_group");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductPermissionItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductPermissionGroupId")
                        .HasColumnName("product_permission_group_id");

                    b.HasKey("Id")
                        .HasName("pk_product_permission_item");

                    b.HasIndex("ProductPermissionGroupId")
                        .HasName("ix_product_permission_item_product_permission_group_id");

                    b.ToTable("product_permission_item");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductPermissionOrgan", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.Property<string>("ProductPermissionGroupId")
                        .HasColumnName("product_permission_group_id");

                    b.HasKey("Id")
                        .HasName("pk_product_permission_organ");

                    b.HasIndex("ProductPermissionGroupId")
                        .HasName("ix_product_permission_organ_product_permission_group_id");

                    b.ToTable("product_permission_organ");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductSpec", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Creator")
                        .HasColumnName("creator");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Icon")
                        .HasColumnName("icon");

                    b.Property<long>("ModifiedTime")
                        .HasColumnName("modified_time");

                    b.Property<string>("Modifier")
                        .HasColumnName("modifier");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.Property<decimal>("PartnerPrice")
                        .HasColumnName("partner_price");

                    b.Property<decimal>("Price")
                        .HasColumnName("price");

                    b.Property<string>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnName("purchase_price");

                    b.Property<string>("RelatedStaticMeshIds")
                        .HasColumnName("related_static_mesh_ids");

                    b.HasKey("Id")
                        .HasName("pk_product_spec");

                    b.HasIndex("ProductId")
                        .HasName("ix_product_spec_product_id");

                    b.ToTable("product_spec");
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductPermissionItem", b =>
                {
                    b.HasOne("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductPermissionGroup", "ProductPermissionGroup")
                        .WithMany("OwnProductItems")
                        .HasForeignKey("ProductPermissionGroupId")
                        .HasConstraintName("fk_product_permission_item_product_permission_group_product_pe~")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductPermissionOrgan", b =>
                {
                    b.HasOne("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductPermissionGroup", "ProductPermissionGroup")
                        .WithMany("OwnOrganItems")
                        .HasForeignKey("ProductPermissionGroupId")
                        .HasConstraintName("fk_product_permission_organ_product_permission_group_product_p~")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App.MoreJee.Domain.AggregateModels.ProductAggregate.ProductSpec", b =>
                {
                    b.HasOne("App.MoreJee.Domain.AggregateModels.ProductAggregate.Product", "Product")
                        .WithMany("OwnProductSpecs")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_spec_product_product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
